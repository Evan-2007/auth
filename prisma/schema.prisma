// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String    @unique
  password  String
  image    String?
  status    Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isAdmin  Boolean @default(false)
  Session   Session[]
  allowedApps App[]
  invites   invite[]
  groups    group[]
  permissions permission[]
  rules     rule[]
}

model Session {
  id        String   @id
  userName    String
  token     String
  expires   DateTime
  createdAt DateTime @default(now())
  User      User     @relation(fields: [userName], references: [name])
}

model App {
  id        String   @id @default(cuid())
  name      String
  port      Int
  url       String
  forceHttps Boolean @default(false)
  certPath  String?
  keyPath   String?
  user      User[]
  permissions permission[]
  rules     rule[]
}

model invite {
  id        String   @id @default(cuid())
  code      Int   @unique
  permissions permission[]
  groups group[]
  user      User[]
}

model permission {
  id        String   @id @default(cuid())
  name      String
  description String
  apps      App[]
  invites   invite[]
  users     User[]
  groups    group[]
}

model group {
  id        String   @id @default(cuid())
  name      String
  description String
  users     User[]
  invites   invite[]
  permissions permission[]
  rules    rule[]
}

model rule {
  id        String   @id @default(cuid())
  name      String
  description String?
  appId     String
  type      String
  path      String
  App       App      @relation(fields: [appId], references: [id])
  user      User[]
  group     group[]
}